swagger: '2.0'
info:
  description: "Сайт unibox.com\n"
  version: "1.0.0"
  title: "UniBox"
host: "127.0.0.1"
basePath: "/api"
schemes:
- "http"
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /user:
    post:
      summary: "Создание нового пользователя"
      description: "Создание нового пользователя в базе данных.\n"
      operationId: "createUser"
      parameters:
      - in: "body"
        name: "profile"
        description: "Данные пользовательского профиля."
        required: true
        schema:
          $ref: "#/definitions/NewUser"
      responses:
        "201":
          description: "Пользователь успешно создан.\nВозвращает данные созданного\
            \ пользователя.\n"
          schema:
            $ref: "#/definitions/User"
        "409":
          description: "Пользователь c таким ником или почтой уже присутсвует в базе данных.\n"
          schema:
            $ref: "#/definitions/Error"
        "400":
          description: "Bad Request.\n"
          schema:
            $ref: "#/definitions/Error"
  /user/{nickname}:
    get:
      summary: "Получение информации о пользователе"
      description: "Получение информации о пользователе.\n"
      parameters:
      - name: "nickname"
        in: "path"
        type: "string"
        required: true
        description: "Идентификатор пользователя."
      responses:
        "200":
          description: "Возвращает данные пользователя.\n"
          schema:
            $ref: "#/definitions/User"
        "404":
          description: "Пользователь отсутсвует.\n"
          
definitions:
  Error:
    type: "object"
    properties:
      target:
        type: "string"
        example: "email"
      message:
        type: "string"
        example: "invalid"
      internal:
        type: "object"
  User:
    type: "object"
    required:
    - "email"
    - "nickname"
    properties:
      email:
        type: "string"
        format: "email"
        example: "zzyxel@yndex.ru"
        description: "Почтовый адрес пользователя (уникальное поле)."
        x-isnullable: false
      nickname:
        type: "string"
        format: "identity"
        example: "zzyxel"
        description: "Имя пользователя (уникальное поле).\nДанное поле допускает т\
          олько латиницу, цифры и знак подчеркивания.\n"
      firstname:
        type: "string"
        example: "Максим"
        description: "Имя пользователя."
        x-isnullable: false
      lastname:
        type: "string"
        example: "Рубцов"
        description: "Фамилия пользователя."
        x-isnullable: false
    description: "Информация о пользователе.\n"
    example:
      email: "zzyxel@yndex.ru"
      nickname: "zzyxel"
      firstname: "Максим"
      lastname: "Рубцов"
      
  NewUser:
    type: "object"
    required:
    - "email"
    - "password"
    - "nickname"
    - "firstname"
    - "lastname"
    properties:
      email:
        type: "string"
        format: "email"
        example: "zzyxel@yndex.ru"
        description: "Почтовый адрес пользователя (уникальное поле)."
        x-isnullable: false
      password:
        type: "string"
        example: "string"
        description: "Пароль"
        x-isnullable: false
      nickname:
        type: "string"
        format: "identity"
        example: "zzyxel"
        description: "Имя пользователя (уникальное поле).\nДанное поле допускает т\
          олько латиницу, цифры и знак подчеркивания.\n"
      firstname:
        type: "string"
        example: "Максим"
        description: "Имя пользователя."
        x-isnullable: false
      lastname:
        type: "string"
        example: "Рубцов"
        description: "Фамилия пользователя."
        x-isnullable: false
    description: "Информация о пользователе.\n"
    example:
      email: "zzyxel@yndex.ru"
      password: "password"
      nickname: "zzyxel"
      firstname: "Максим"
      lastname: "Рубцов"